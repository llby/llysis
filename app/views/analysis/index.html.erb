<h1>Analysis#index</h1>
<p>Find me in app/views/analysis/index.html.erb</p>

    <div id="srclist" style="float:left; height:400px; width:400px; overflow-y:scroll;">
      <table>
        <tbody id="filelist"></tbody>
      </table>
    </div>
    <div style="float:left; border:red solid 1px;">
      <svg></svg>
    </div>
    <div style="float:left; border:teal solid 1px;">
      <button type="button" onclick=start()>ファイルの行数をグラフ化</button>
    </div>
    <div id="message"></div>



    <script type="text/javascript">
      var w = 600;
      var h = 400;
      var padding = 10;
      var bottomPadding = 30;
      var dataset = [];
      var xScale;
      var yScale;
      var sScale;
      var xAxis;
      var rects;
      var sl;
      var svg = d3.select("svg")
                  .attr("width", w)
                  .attr("height", h);
      svg.append("g")
         .attr("class", "axis")
         .attr("transform", "translate(0," + (h - padding) + ")")

      $.ajax({
        type: 'GET',
        url: 'http://192.168.33.10:3000/analysis/filelist.json',
        cache: false,
        datatype: 'json',
        success: function( data ) {

          len = data.length;
          for(var j=0; j < len; j++){
            $( '#filelist' ).append( '<tr><td>' + data[j]['path'] + '</td></tr>' );
          }

          $.ajax({
            type: 'GET',
            url: 'http://192.168.33.10:3000/analysis/data.json',
            cache: true,
            datatype: 'json',
            success: function( data ) {

              dataset = [];
              dataset = data;
              xScale = d3.scale.linear()
                         .domain([0, d3.max(dataset, function(d) { return d; })])
                         .range([padding, w - padding]);

              yScale = d3.scale.linear()
                         .domain([0, data.length])
                         .range([padding, h - bottomPadding]);

              xAxis = d3.svg.axis()
                        .scale(xScale)
                        .orient("bottom")
                        .ticks(5);

              svg.append("g")
                 .attr("class", "axis")
                 .attr("transform", "translate(0," + (h - 20) + ")")
                 .call(xAxis);

              rects = svg.selectAll("rect")
                         .data(dataset)
                         .enter()
                         .append("rect");

              sl = document.getElementById( 'srclist' );
              var smax = sl.scrollHeight - sl.offsetHeight;

              sScale = d3.scale.linear()
                         .domain([0, 1])
                         .range([padding, h - bottomPadding]);

              var ll = svg.append("line")
                          .attr("x1", 0)
                          .attr("y1", 0)
                          .attr("x2", w)
                          .attr("y2", 0)
                          .attr("stroke","red")
                          .attr("stroke-width",0.5);

              sl.onscroll = function()
              {
                ll.attr("y1", sScale(this.scrollTop / smax))
                  .attr("y2", sScale(this.scrollTop / smax));
              }

            },
            error: function( data ) {
              $( '#message' ).html( '<font color="red">Error2</font>' );
            }
          });
        },
        error: function( data ) {
          $( '#message' ).html( '<font color="red">Error1</font>' );
        }
      });




      function start() {
        
        rects.attr("x", padding)
             .attr("y", function(d, i) { return yScale(i); })
             .attr("width", 0)
             .attr("height", 1)
             // .attr("fill", function(d) { return "rgb(0, 0, " + (d * 10) + ")"; })
             .attr("fill", function(d) { return "rgb(0, 0, 200)"; })
             .transition()
             .duration(2000)
             .attr("width", function(d, i) { return xScale(d) - padding; })
             .ease("in");

      }

    </script>

